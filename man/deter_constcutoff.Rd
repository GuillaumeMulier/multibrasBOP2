% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deter_constcutoff.R
\encoding{UTF-8}
\name{deter_constcutoff}
\alias{deter_constcutoff}
\title{Thresholds optimization}
\usage{
deter_constcutoff(
  alpha,
  ana_inter,
  n_bras = 1,
  rand_ratio = NULL,
  bonf = FALSE,
  mat_beta_xi = matrix(c(1, 1, 0, 0, 0, 1, 0, 1), nrow = 2, byrow = TRUE),
  phi = NULL,
  delta = NULL,
  prior = NULL,
  p_n,
  p_a,
  nsim_oc = 10000,
  seq_eff = seq(0.01, 0.99, by = 0.02),
  seq_tox = seq(0.01, 0.99, by = 0.02),
  seed = 1024,
  methode = 2L,
  affich_mat = NULL
)
}
\arguments{
\item{alpha}{Desired type I error rate.}

\item{ana_inter}{Vector giving the number of additional patients at each interim analysis. If ana_inter_tox is supplied, represents the vector for efficacy interim analyses.}

\item{n_bras}{Number of treatment arms.}

\item{rand_ratio}{Number or numeric vector representing the ratio between the number of patients in treatment arms and control arm (or some reference sample size in case
of comparison to a reference value). Not currently implemented.}

\item{bonf}{TRUE to apply a Bonferroni correction.}

\item{mat_beta_xi}{The link matrix between outcomes of the multinomial distribution and endpoints. (Second row is for non toxicity instead of toxicity).}

\item{phi}{Thresholds for efficacy and toxicity (by default the values under inefficacy/toxicity hypothesis). If specified, the values for efficacy and non toxicity.}

\item{delta}{Minimal desirable difference of effect if compared with a control arm. Should be between -1 and 1. Set to NULL (default value) for an uncontrolled setting.}

\item{prior}{Prior for the law of probability (by default, skeptical: the inefficacy/toxicity hypothesis).}

\item{p_n}{Law of probability under the inefficacy/toxicity hypothesis.}

\item{p_a}{Law of probability under the efficacy/non toxicity hypothesis.}

\item{nsim_oc}{Number of simulated trials.}

\item{seq_eff, seq_tox}{Vectors of values used to choose the couple while optimizing the couple gamma_eff/gamma_tox.}

\item{seed}{Seed for \code{rmultinom}.}

\item{methode}{Method used to generate the data:
\itemize{
\item 1: trial by trial;
\item 2: trial by trial, patient by patient;
\item 3: whole in 1.
}}

\item{affich_mat}{Yes to display in console the matrix used for the choice, No for no display and default option NULL will ask you.}
}
\value{
Display of the selected couple in console.
When stocked in an object, a list containing:
\itemize{
\item a 1st element with the chosen couple and the type I error rate and power;
\item a 2nd element with the same informations if we take the same value for efficacy and toxicity;
\item a 3rd element with the matrix used to chose the optimal couple.
}
}
\description{
Optimize gamma_eff and gamma_tox (constant thoughout the trial). The stopping rule can be written as stop if Pr(mat_beta_xi * p_ttt <= phi | Dn) > 1 - gamma_eff or 1 - gamma_tox.
}
\details{
Optimize gamma_eff and gamma_tox:
\itemize{
\item for 1 arm: screening of every couple gamma_eff/gamma_tox by simulating monoarm trials under H0 to assess the control of type I error rate and under
H1 to maximize the power.
\item for multi-arm trials: screening of every couple gamma_eff/gamma_tox by simulating trials with all arms under H0 to assess the control of FWER and under
LFC to maximize the power (defined as the acceptation of the treatment at least in the effective and not toxic arm).
}
}
\examples{
# In the following, not running the code because it can take some time
if (FALSE) {
# For the monoarm version of BOP2 with constant thresholds
carac_opt <- deter_constcutoff(alpha = 0.1,
                               ana_inter = c(10, rep(5, 6)),
                               p_n = c(0.15, 0.3, 0.15, 0.4),
                               p_a = c(0.18, 0.42, 0.02, 0.38),
                               methode = 3L,
                               affich_mat = "No")
carac_opt[[1]]

# For a trial with 3 arms
carac_opt <- deter_constcutoff(alpha = 0.1,
                               ana_inter = rep(15, 4),
                               p_n = c(0.1, 0.2, 0.2, 0.5),
                               p_a = c(0.15, 0.5, 0.05, 0.3),
                               n_bras = 3,
                               affich_mat = "No",
                               bonf = FALSE)
carac_opt[[1]]
}

}
